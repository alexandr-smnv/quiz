{"version":3,"sources":["components/SelectField.js","components/TextFieldComp.js","hooks/useAxios.js","data/data.js","redux/actionsTypes.js","redux/actions/settingActions.js","pages/Settings.js","redux/actions/questionsAction.js","pages/Questions.js","pages/FinalScreen.js","App.js","redux/reducers/settingsReducer.js","redux/reducers/questionsReducer.js","redux/store.js","index.js"],"names":["SelectField","name","label","value","options","handleChange","Box","mt","width","FormControl","size","fullWidth","InputLabel","Select","onChange","map","option","MenuItem","id","TextFieldComp","type","TextField","variant","axios","defaults","baseURL","useAxios","url","useState","response","setResponse","error","setError","loading","setLoading","useEffect","get","then","res","data","catch","err","finally","difficultyOptions","typeOptions","CHANGE_AMOUNT","CHANGE_SCORE","CHANGE_SETTINGS","FETCH_QUESTIONS","handleScoreChange","score","payload","Settings","dispatch","useDispatch","navigate","useNavigate","resCategory","category","difficulty","amount","settings","setSettings","e","target","apiUrl","concat","fetchQuestions","questions","results","CircularProgress","Typography","color","onSubmit","event","preventDefault","handleChangeSettings","trivia_categories","Button","Questions","useSelector","state","settingsReducer","questionsReducer","questionIndex","setQuestionIndex","setOptions","selected","setSelected","length","question","answers","incorrect_answers","splice","max","Math","floor","random","correct_answer","handleSelect","decode","style","pointerEvents","onClick","handleClickAnswer","Grid","justifyContent","container","spacing","item","xs","FinalScreen","fontWeight","mb","App","Container","maxWidth","textAlign","path","element","initialState","question_category","question_difficulty","question_type","amount_of_question","action","rootReducers","combineReducers","persistedStore","stateStr","localStorage","getItem","JSON","parse","undefined","console","loadFromLocalStorage","store","createStore","devToolsEnhancer","subscribe","setItem","stringify","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc1cd616.chunk.js","sourcesContent":["import React from 'react';\nimport {Box, FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\n\nconst SelectField = ({name, label, value, options, handleChange}) => {\n\n  return (\n    <Box mt={3} width={\"100%\"}>\n      <FormControl size={\"small\"} fullWidth>\n        <InputLabel>{label}</InputLabel>\n        <Select name={name} value={value} label={label} onChange={handleChange}>\n          {\n            options.map(option => <MenuItem key={option.id} value={option.id}>{option.name}</MenuItem>)\n          }\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default SelectField;\n","import React from 'react';\nimport {Box, FormControl, TextField} from \"@mui/material\";\n\nconst TextFieldComp = ({name, type, label, handleChange}) => {\n\n  return (\n    <Box mt={3} width={\"100%\"}>\n      <FormControl fullWidth size={\"small\"}>\n        <TextField\n          name={name}\n          type={type}\n          label={label}\n          onChange={handleChange}\n          size={\"small\"}\n          variant={\"outlined\"}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default TextFieldComp;\n","import {useEffect, useState} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://opentdb.com/'\n\n\nconst useAxios = ({url}) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = () => {\n      axios\n        .get(url)\n        .then(res => setResponse(res.data))\n        .catch(err => setError(err))\n        .finally(() => setLoading(false))\n    }\n    fetchData()\n  }, [url]);\n\n  return {response, error, loading};\n};\n\nexport default useAxios;\n","export const difficultyOptions = [\n  {id: 'easy', name: 'Easy'},\n  {id: 'medium', name: 'Medium'},\n  {id: 'hard', name: 'Hard'},\n]\n\nexport const typeOptions = [\n  {id: 'multiple', name: 'Multiple'},\n  {id: 'boolean', name: 'True/False'}\n]","export const SAVE_NAME = 'SAVE_NAME'\nexport const CHANGE_CATEGORY = 'CHANGE_CATEGORY'\nexport const CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY'\nexport const CHANGE_TYPE = 'CHANGE_TYPE'\nexport const CHANGE_AMOUNT = 'CHANGE_AMOUNT'\nexport const CHANGE_SCORE = 'CHANGE_SCORE'\nexport const CHANGE_SETTINGS = 'CHANGE_SETTINGS'\nexport const FETCH_QUESTIONS = 'FETCH_QUESTIONS'","import {\n  CHANGE_AMOUNT,\n  CHANGE_SCORE,\n  CHANGE_SETTINGS,\n} from \"../actionsTypes\";\n\n\nexport const handleChangeSettings = (settings) => {\n  return {\n    type: CHANGE_SETTINGS,\n    payload: settings\n  }\n}\n\nexport const handleAmountChange = (amount) => {\n  return {\n    type: CHANGE_AMOUNT,\n    payload: amount\n  }\n}\n\nexport const handleScoreChange = (score) => {\n  return {\n    type: CHANGE_SCORE,\n    payload: score\n  }\n}","import React, {useState} from 'react';\nimport SelectField from \"../components/SelectField\";\nimport {Box, Button, CircularProgress, Typography} from \"@mui/material\";\nimport TextFieldComp from \"../components/TextFieldComp\";\nimport useAxios from \"../hooks/useAxios\";\nimport {useNavigate} from 'react-router-dom';\nimport {difficultyOptions, typeOptions} from \"../data/data\";\nimport {useDispatch} from \"react-redux\";\nimport {handleChangeSettings} from \"../redux/actions/settingActions\";\nimport axios from \"axios\";\nimport {handleFetchQuestions} from \"../redux/actions/questionsAction\";\n\nconst Settings = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const resCategory = useAxios({url: \"api_category.php\"})\n  const [settings, setSettings] = useState({\n    name: \"\",\n    category: \"\",\n    difficulty: \"\",\n    type: \"\",\n    amount: 10\n  });\n\n  const handleChange = (e) => {\n    setSettings({...settings, [e.target.name]: e.target.value})\n  }\n\n  let apiUrl = `/api.php?amount=${settings.amount}`\n\n  if (settings.category) {\n    apiUrl = apiUrl.concat(`&category=${settings.category}`)\n  }\n  if (settings.difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${settings.difficulty}`)\n  }\n  if (settings.type) {\n    apiUrl = apiUrl.concat(`&type=${settings.type}`)\n  }\n\n  const fetchQuestions = () => {\n    axios({url: apiUrl})\n      .then(response => dispatch(handleFetchQuestions(response.data.results)))\n      .then(navigate('/questions'))\n  }\n\n  if (resCategory.loading) {\n    return (\n      <Box mt={30}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  if (resCategory.error) {\n    return (\n      <Typography variant={\"h6\"} mt={20} color={\"red\"}>\n        Some Want Wrong!\n      </Typography>\n    )\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(handleChangeSettings(settings))\n    fetchQuestions()\n\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextFieldComp\n        name=\"name\"\n        type=\"text\"\n        label=\"Enter your name\"\n        handleChange={handleChange}\n      />\n      <SelectField\n        name=\"category\"\n        options={resCategory.response.trivia_categories}\n        label=\"Category\"\n        value={settings.category}\n        handleChange={handleChange}\n      />\n      <SelectField\n        name=\"difficulty\"\n        options={difficultyOptions}\n        label=\"Difficulty\"\n        value={settings.difficulty}\n        handleChange={handleChange}\n      />\n      <SelectField\n        name=\"type\"\n        options={typeOptions}\n        label=\"Type\"\n        value={settings.type}\n        handleChange={handleChange}\n      />\n      <TextFieldComp\n        name=\"amount\"\n        type=\"number\"\n        label=\"Amount of questions\"\n        handleChange={handleChange}\n      />\n      <Box mt={3} width={\"100%\"}>\n        <Button fullWidth variant={\"contained\"} type={\"submit\"}>\n          Get Started\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nexport default Settings;","import {FETCH_QUESTIONS} from \"../actionsTypes\";\n\n\nexport const handleFetchQuestions = (questions) => {\n  return {\n    type: FETCH_QUESTIONS,\n    payload: questions\n  }\n}","import React, {useEffect, useState} from 'react';\nimport {Box, Button, Grid, Typography} from \"@mui/material\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {handleScoreChange} from \"../redux/actions/settingActions\";\nimport {decode} from \"html-entities\";\n\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max))\n}\n\nconst Questions = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const {name, score} = useSelector(state => state.settingsReducer)\n  const {questions} = useSelector(state => state.questionsReducer)\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selected, setSelected] = useState(null);\n\n  useEffect(() => {\n    if (questions?.length) {\n      // загрузка вопроса по индексу\n      const question = questions[questionIndex]\n      // загрузка неправильных ответов\n      let answers = [...question.incorrect_answers]\n      // добавление в массив ответов правильный ответ на рандомное место\n      answers.splice(getRandomInt(3), 0, question.correct_answer)\n      setOptions(answers)\n    }\n  }, [questions, questionIndex])\n\n\n  const handleClickAnswer = (data) => {\n    const question = questions[questionIndex];\n    if (data === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n    setSelected(data)\n  };\n\n  const handleSelect = (data) => {\n    const question = questions[questionIndex];\n    // если выбранный ответ правильный - выделить зеленым\n    if (selected === data && selected === question.correct_answer) return \"success\";\n    // если выбранный ответ неправильный - выделить красным\n    else if (selected === data && selected !== question.correct_answer) return \"error\";\n    // выделить правильный ответ - зеленым\n    else if (data === question.correct_answer) return \"success\";\n  };\n\n  const handleNextQuestion = () => {\n    if (selected) {\n      setSelected(null)\n      if (questionIndex + 1 < questions.length) {\n        setQuestionIndex(questionIndex + 1);\n      } else {\n        navigate(\"/score\");\n      }\n    }\n  }\n\n  return (\n    <Box>\n      <Typography variant={\"h4\"}>Hello {name}</Typography>\n      <Typography mt={2} variant={\"h4\"}>Question №{questionIndex + 1}</Typography>\n      <Typography mt={5}>{decode(questions[questionIndex]?.question)}</Typography>\n\n      {\n        options.map((data, id) => (\n          <Box key={id} mt={2}>\n            <Button\n              style={selected && {pointerEvents: 'none'}}\n              color={selected ? handleSelect(data) : 'primary'}\n              variant={\"contained\"}\n              onClick={() => handleClickAnswer(data)}\n            >\n              {decode(data)}\n            </Button>\n          </Box>\n        ))\n      }\n\n      <Grid mt={4} justifyContent={\"center\"} container spacing={2}>\n        <Grid item xs={4}>\n          <Button color={\"error\"} fullWidth variant=\"contained\">Exit</Button>\n        </Grid>\n        <Grid item xs={4}>\n          <Button onClick={() => handleNextQuestion()} color={'success'} fullWidth variant=\"contained\">Next</Button>\n        </Grid>\n      </Grid>\n\n      <Box mt={5}>Score: {score} / {questions.length}</Box>\n    </Box>\n  );\n};\n\nexport default Questions;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Box, Button, Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport {handleAmountChange, handleScoreChange} from \"../redux/actions/settingActions\";\n\nconst FinalScreen = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { score } = useSelector(state => state.settingsReducer)\n\n  const handleNewQuiz = () => {\n    dispatch(handleScoreChange(0))\n    dispatch(handleAmountChange(10))\n    navigate('/quiz')\n  }\n\n  return (\n    <Box mt={10}>\n      <Typography variant={\"h3\"} fontWeight={\"bold\"} mb={3}>Final score - {score}</Typography>\n      <Button variant={\"outlined\"} onClick={handleNewQuiz}>New Quiz</Button>\n    </Box>\n  );\n};\n\nexport default FinalScreen;","import React from \"react\";\nimport {\n  BrowserRouter as Router, Route, Routes\n} from 'react-router-dom'\nimport Settings from \"./pages/Settings\";\nimport Questions from \"./pages/Questions\";\nimport FinalScreen from \"./pages/FinalScreen\";\nimport {Box, Container, Typography} from \"@mui/material\";\n\n\nfunction App() {\n  return (\n    <Container maxWidth=\"sm\">\n      <Box textAlign=\"center\" mt={5}>\n        <Typography variant=\"h2\" fontWeight=\"bold\" mb={5}>\n          Quiz App\n        </Typography>\n        <Router>\n          <Routes>\n            <Route path=\"/quiz\" element={<Settings/>}/>\n            <Route path=\"/questions\" element={<Questions/>} />\n            <Route path=\"/score\" element={<FinalScreen/>} />\n          </Routes>\n        </Router>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","import {CHANGE_AMOUNT, CHANGE_SCORE, CHANGE_SETTINGS} from \"../actionsTypes\";\n\nconst initialState = {\n  name: \"\",\n  question_category: \"\",\n  question_difficulty: \"\",\n  question_type: \"\",\n  amount_of_question: 10,\n  score: 0\n}\n\nconst settingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SETTINGS:\n      return {\n        ...state,\n        // отрефакторить\n        name: action.payload.name,\n        question_category: action.payload.category,\n        question_difficulty: action.payload.difficulty,\n        question_type: action.payload.type,\n        amount_of_question: action.payload.amount\n      }\n    case CHANGE_AMOUNT:\n      return {\n        ...state,\n        amount_of_question: action.payload\n      }\n    case CHANGE_SCORE:\n      return {\n        ...state,\n        score: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default settingsReducer;","import {FETCH_QUESTIONS} from \"../actionsTypes\";\n\n\nconst initialState = {\n  questions: []\n}\n\nconst questionsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_QUESTIONS: {\n      return {\n        ...state, questions: action.payload\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default questionsReducer;","import {combineReducers, createStore} from \"redux\";\nimport {devToolsEnhancer} from \"redux-devtools-extension\";\nimport settingsReducer from \"./reducers/settingsReducer\";\nimport questionsReducer from \"./reducers/questionsReducer\";\n\n\nconst rootReducers = combineReducers({\n  settingsReducer: settingsReducer,\n  questionsReducer: questionsReducer\n})\n\nconst saveToLocalStorage = (state) => {\n  try {\n    localStorage.setItem('questions', JSON.stringify(state.questionsReducer));\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst loadFromLocalStorage = () => {\n  try {\n    const stateStr = localStorage.getItem('questions');\n    return stateStr ? JSON.parse(stateStr) : undefined;\n  } catch (e) {\n    console.error(e);\n    return undefined;\n  }\n};\n\nconst persistedStore = {questionsReducer: loadFromLocalStorage()};\n\n\nconst store = createStore(rootReducers, persistedStore, devToolsEnhancer())\n\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState());\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}